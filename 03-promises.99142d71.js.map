{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAI,C,SAAEH,E,MAAUC,IAGhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CAtCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAElD,GAAIJ,EAAMK,MAAQ,GAAKJ,EAAKI,MAAQ,GAAKH,EAAOG,MAAQ,EACtDC,EAAAvB,GAASwB,OAAOC,QAAQ,uCAExB,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAOG,MAAOI,IAAI,CAErBC,OAAOV,EAAMK,OAASJ,EAAKI,MAE1CpB,EAAc,EAAG,MACpB0B,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAAvB,GAASwB,OAAOK,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEzE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBmB,EAAAvB,GAASwB,OAAOO,QAAQ,sBAAoB5B,QAAeC,MAAU,G,CAIvEW,EAAIK,cAAcY,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  if (delay.value < 0 || step.value < 0 || amount.value < 0) {\n    Notiflix.Notify.warning(`Please enter a positive number`);\n  } else {\n    for (let i = 0; i < amount.value; i++){\n      let position = i + 1;\n      const delays = Number(delay.value) + step.value * i;\n\n      createPromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    }\n  }\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        res({ position, delay });\n      } else {\n        // Reject\n        rej({ position, delay });\n      }\n    }, delay);\n\n  });\n\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","value","$parcel$interopDefault","Notify","warning","i","Number","then","success","catch","failure","reset"],"version":3,"file":"03-promises.99142d71.js.map"}